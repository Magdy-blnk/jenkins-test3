pipeline {
    agent any

    environment {
        REPO_NAME = "${GIT_URL.split('/').last().replace('.git', '')}"
        BRANCH_NAME = "${env.GIT_BRANCH}"
    }

    stages {

        stage('Print Incoming Webhook Data') {
            steps {
                script {
                    echo "ðŸ”¹ Printing Environment Variables:"
                    sh 'env | sort'

                    echo "ðŸ”¹ Printing Raw Webhook Payload:"
                    if (env.JOB_NAME) {
                        sh "curl -s -X GET ${env.JENKINS_URL}/job/${env.JOB_NAME}/lastBuild/api/json | jq ."
                    } else {
                        echo "JOB_NAME is not set. Ensure the webhook is triggering the job correctly."
                    }
                }
            }
            
        stage('Checkout') {
            steps {
                checkout scm
                script {
                    echo "Triggered by repository: ${REPO_NAME}"
                    echo "Branch: ${BRANCH_NAME}"
                }
            }
        }

        stage('Validate Triggering Branch') {
            steps {
                script {
                    // Define allowed branches per repository (any branch that contains 'main')
                    def allowedBranches = [
                        "jenkins-test"  : ~/.*main.*/,
                        "jenkins-test2" : ~/.*main.*/,
                        "jenkins-test3" : ~/.*main.*/
                    ]
                    
                    if (!allowedBranches.containsKey(REPO_NAME) || !(BRANCH_NAME in allowedBranches[REPO_NAME])) {
                        echo "Skipping pipeline execution for repo: ${REPO_NAME}, branch: ${BRANCH_NAME}"
                        currentBuild.result = 'ABORTED'
                        error "This branch is not allowed to trigger the pipeline."
                    }
                }
            }
        }

        stage('Execute Actions Based on Repo') {
            steps {
                script {
                    if (REPO_NAME == "jenkins-test3") {
                        echo "Executing action for jenkins-test3"

                    } else if (REPO_NAME == "jenkins-test") {
                        echo "Executing action for jenkins-test"
                        
                        
                    } else if (REPO_NAME == "jenkins-test2") {
                        echo "Executing action for jenkins-test2"

                    } else {
                        error "Unknown repository!"
                    }
                }
            }
        }
    }
}
